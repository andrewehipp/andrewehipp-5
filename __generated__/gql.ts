/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 * Learn more about it here: https://the-guild.dev/graphql/codegen/plugins/presets/preset-client#reducing-bundle-size
 */
type Documents = {
    "\n            query HomePage {\n                projectListingCollection(limit: 1) {\n                    items {\n                        about\n                        projectsCollection {\n                            items {\n                                slug\n                                client\n                                name\n                                fullThumbnail {\n                                    url(transform: { width: 530, format: WEBP })\n                                    width\n                                    height\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        ": typeof types.HomePageDocument,
    "\n            query ProjectPageMeta($slug: String) {\n                projectCollection(where: { slug_in: [$slug] }, limit: 1) {\n                    items {\n                        name\n                        description\n                    }\n                }\n            }\n        ": typeof types.ProjectPageMetaDocument,
    "\n            query ProjectCollection {\n                projectCollection(limit: 500) {\n                    items {\n                        name\n                        description\n                        slug\n                    }\n                }\n            }\n        ": typeof types.ProjectCollectionDocument,
    "\n            query ProjectPage($slug: String) {\n                projectCollection(where: { slug_in: [$slug] }, limit: 1) {\n                    items {\n                        _id\n                        name\n                        client\n                        description\n                        screenshotsCollection {\n                            items {\n                                _id\n                                name\n                                description\n                                mobile {\n                                    url(\n                                        transform: {\n                                            width: 210\n                                            height: 375\n                                            resizeStrategy: FILL\n                                            resizeFocus: TOP\n                                            format: WEBP\n                                        }\n                                    )\n                                    width\n                                    height\n                                    contentType\n                                }\n                                desktop {\n                                    url(\n                                        transform: { width: 1000, format: WEBP }\n                                    )\n                                    width\n                                    height\n                                    contentType\n                                }\n                            }\n                        }\n                    }\n                }\n\n                projectListingCollection(\n                    where: { name_in: [\"Home\"] }\n                    limit: 1\n                ) {\n                    items {\n                        projectsCollection {\n                            items {\n                                slug\n                                client\n                                name\n                                fullThumbnail {\n                                    url(transform: { width: 530, format: WEBP })\n                                    width\n                                    height\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        ": typeof types.ProjectPageDocument,
};
const documents: Documents = {
    "\n            query HomePage {\n                projectListingCollection(limit: 1) {\n                    items {\n                        about\n                        projectsCollection {\n                            items {\n                                slug\n                                client\n                                name\n                                fullThumbnail {\n                                    url(transform: { width: 530, format: WEBP })\n                                    width\n                                    height\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        ": types.HomePageDocument,
    "\n            query ProjectPageMeta($slug: String) {\n                projectCollection(where: { slug_in: [$slug] }, limit: 1) {\n                    items {\n                        name\n                        description\n                    }\n                }\n            }\n        ": types.ProjectPageMetaDocument,
    "\n            query ProjectCollection {\n                projectCollection(limit: 500) {\n                    items {\n                        name\n                        description\n                        slug\n                    }\n                }\n            }\n        ": types.ProjectCollectionDocument,
    "\n            query ProjectPage($slug: String) {\n                projectCollection(where: { slug_in: [$slug] }, limit: 1) {\n                    items {\n                        _id\n                        name\n                        client\n                        description\n                        screenshotsCollection {\n                            items {\n                                _id\n                                name\n                                description\n                                mobile {\n                                    url(\n                                        transform: {\n                                            width: 210\n                                            height: 375\n                                            resizeStrategy: FILL\n                                            resizeFocus: TOP\n                                            format: WEBP\n                                        }\n                                    )\n                                    width\n                                    height\n                                    contentType\n                                }\n                                desktop {\n                                    url(\n                                        transform: { width: 1000, format: WEBP }\n                                    )\n                                    width\n                                    height\n                                    contentType\n                                }\n                            }\n                        }\n                    }\n                }\n\n                projectListingCollection(\n                    where: { name_in: [\"Home\"] }\n                    limit: 1\n                ) {\n                    items {\n                        projectsCollection {\n                            items {\n                                slug\n                                client\n                                name\n                                fullThumbnail {\n                                    url(transform: { width: 530, format: WEBP })\n                                    width\n                                    height\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        ": types.ProjectPageDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n            query HomePage {\n                projectListingCollection(limit: 1) {\n                    items {\n                        about\n                        projectsCollection {\n                            items {\n                                slug\n                                client\n                                name\n                                fullThumbnail {\n                                    url(transform: { width: 530, format: WEBP })\n                                    width\n                                    height\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        "): (typeof documents)["\n            query HomePage {\n                projectListingCollection(limit: 1) {\n                    items {\n                        about\n                        projectsCollection {\n                            items {\n                                slug\n                                client\n                                name\n                                fullThumbnail {\n                                    url(transform: { width: 530, format: WEBP })\n                                    width\n                                    height\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        "];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n            query ProjectPageMeta($slug: String) {\n                projectCollection(where: { slug_in: [$slug] }, limit: 1) {\n                    items {\n                        name\n                        description\n                    }\n                }\n            }\n        "): (typeof documents)["\n            query ProjectPageMeta($slug: String) {\n                projectCollection(where: { slug_in: [$slug] }, limit: 1) {\n                    items {\n                        name\n                        description\n                    }\n                }\n            }\n        "];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n            query ProjectCollection {\n                projectCollection(limit: 500) {\n                    items {\n                        name\n                        description\n                        slug\n                    }\n                }\n            }\n        "): (typeof documents)["\n            query ProjectCollection {\n                projectCollection(limit: 500) {\n                    items {\n                        name\n                        description\n                        slug\n                    }\n                }\n            }\n        "];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n            query ProjectPage($slug: String) {\n                projectCollection(where: { slug_in: [$slug] }, limit: 1) {\n                    items {\n                        _id\n                        name\n                        client\n                        description\n                        screenshotsCollection {\n                            items {\n                                _id\n                                name\n                                description\n                                mobile {\n                                    url(\n                                        transform: {\n                                            width: 210\n                                            height: 375\n                                            resizeStrategy: FILL\n                                            resizeFocus: TOP\n                                            format: WEBP\n                                        }\n                                    )\n                                    width\n                                    height\n                                    contentType\n                                }\n                                desktop {\n                                    url(\n                                        transform: { width: 1000, format: WEBP }\n                                    )\n                                    width\n                                    height\n                                    contentType\n                                }\n                            }\n                        }\n                    }\n                }\n\n                projectListingCollection(\n                    where: { name_in: [\"Home\"] }\n                    limit: 1\n                ) {\n                    items {\n                        projectsCollection {\n                            items {\n                                slug\n                                client\n                                name\n                                fullThumbnail {\n                                    url(transform: { width: 530, format: WEBP })\n                                    width\n                                    height\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        "): (typeof documents)["\n            query ProjectPage($slug: String) {\n                projectCollection(where: { slug_in: [$slug] }, limit: 1) {\n                    items {\n                        _id\n                        name\n                        client\n                        description\n                        screenshotsCollection {\n                            items {\n                                _id\n                                name\n                                description\n                                mobile {\n                                    url(\n                                        transform: {\n                                            width: 210\n                                            height: 375\n                                            resizeStrategy: FILL\n                                            resizeFocus: TOP\n                                            format: WEBP\n                                        }\n                                    )\n                                    width\n                                    height\n                                    contentType\n                                }\n                                desktop {\n                                    url(\n                                        transform: { width: 1000, format: WEBP }\n                                    )\n                                    width\n                                    height\n                                    contentType\n                                }\n                            }\n                        }\n                    }\n                }\n\n                projectListingCollection(\n                    where: { name_in: [\"Home\"] }\n                    limit: 1\n                ) {\n                    items {\n                        projectsCollection {\n                            items {\n                                slug\n                                client\n                                name\n                                fullThumbnail {\n                                    url(transform: { width: 530, format: WEBP })\n                                    width\n                                    height\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        "];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;